[{"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/index.js":"1","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/reportWebVitals.js":"2","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/App.js":"3","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchUser.js":"4","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/shared/Spinner.js":"5","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchUserById.js":"6","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchCommentById.js":"7","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchTodosById.js":"8"},{"size":500,"mtime":1607540650331,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607540650332,"results":"11","hashOfConfig":"10"},{"size":475,"mtime":1607549833791,"results":"12","hashOfConfig":"10"},{"size":745,"mtime":1607548859528,"results":"13","hashOfConfig":"10"},{"size":155,"mtime":1607547115948,"results":"14","hashOfConfig":"10"},{"size":1361,"mtime":1607615273355,"results":"15","hashOfConfig":"10"},{"size":1325,"mtime":1607550348058,"results":"16","hashOfConfig":"10"},{"size":1295,"mtime":1607550994701,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1so9hl7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/index.js",[],["39","40"],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/reportWebVitals.js",[],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/App.js",["41","42"],"import React,  {useState, useEffect} from 'react';\nimport FetchUsers from './FetchUser';\nimport FetchUserById from './FetchUserById';\nimport FetchCommentById from \"./FetchCommentById\"\nimport FetchTodosById from \"./FetchTodosById\"\n\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FetchUsers/>\n      <hr/>\n      <FetchUserById/>\n      <hr/>\n      <FetchCommentById/>\n      <hr/>\n      <FetchTodosById/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchUser.js",[],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/shared/Spinner.js",[],["43","44"],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchUserById.js",["45"],"/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchCommentById.js",["46"],"import React, { useEffect, useState  } from 'react';\n\n\n\n\nconst FetchCommentById = ()=> {\nconst [searchCommentById, setsSearchCommentById] = useState(\"\")\nconst [isSearching, setIsSearching] = useState(false)\nconst [showComment, setShowComment] = useState(null)\n\n\nasync function fetchingCommentById(){\n    try {\n        let response = await fetch(`http://jsonplaceholder.typicode.com/comments/${searchCommentById}`);\n        let results = await response.json()\n\n        setShowComment(results)\n        setsSearchCommentById(\"\")\n        setIsSearching(false)\n\n    }catch(e){\n        console.log(e.message)\n        setIsSearching(false)\n    }\n}\n\nuseEffect(()=>{\n    if(!searchCommentById){\n        return;\n    }\n    fetchingCommentById();\n}, [isSearching]);\n\nfunction handleSearchCommentSubmit(e){\n    e.preventDefault();\n    if(!searchCommentById){\n        return;\n    }\n    setIsSearching(true)\n\n}\n    return (\n    <div>\n        <form onSubmit={handleSearchCommentSubmit}>\n            <input\n            type=\"text\"\n            value={searchCommentById}\n            onChange={(e)=> setsSearchCommentById(e.target.value)}\n            />\n            <button>Search Comment</button>\n            {isSearching ? <p>...Fetching</p> : <p>{showComment?.name}</p>}\n        </form>\n    </div>\n    );\n};\n\n\nexport default FetchCommentById;","/Users/danieljames/CodeImmersives-WebDev/term-2/week-14/react-hooks-intro-2/src/FetchTodosById.js",["47","48"],"import React, { useState, useEffect, useRef } from 'react';\n\n\n\nconst FetchTodosById = () => {\n\n    const [searchTodoById, setSearchTodoById] = useState(\"\")\n    const [isSearching, setIsSearching] = useState(false)\n    const [showTodo, setShowTodo] = useState(null)\n\n\nasync function fetchingTodoById(){\n    try{\n        let response = await fetch(`http://jsonplaceholder.typicode.com/todos/${searchTodoById}`);\n        let results = await response.json()\n\n        setShowTodo(results)\n        setSearchTodoById(\"\")\n        setIsSearching(false)\n\n    }catch(e){\n        console.log(e.message)\n        setIsSearching(false)\n    }\n}\n\nuseEffect(()=>{\n    if(!searchTodoById){\n        return;\n    }\n    fetchingTodoById();\n}, [isSearching]);\n\n\n\n\nfunction handleSearchTodoSubmit(e){\n    e.preventDefault();\n    if(!searchTodoById){\n        return;\n    }\n    setIsSearching(true)\n\n}\n\n\n\n\nreturn (\n        <div>\n           <form onSubmit={handleSearchTodoSubmit}>\n            <input\n            type=\"text\"\n            value={searchTodoById}\n            onChange={(e)=> setSearchTodoById(e.target.value)}\n            />\n            <button>Search Todo</button>\n            {isSearching ? <p>...Fetching</p> : <p>{showTodo?.title}</p>}\n        </form>\n        </div>\n    )\n}\n\nexport default FetchTodosById;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"49","replacedBy":"58"},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","severity":1,"message":"60","line":5,"column":24,"nodeType":"55","messageId":"56","endLine":5,"endColumn":37},{"ruleId":"61","severity":1,"message":"62","line":32,"column":4,"nodeType":"63","endLine":32,"endColumn":17,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":44},{"ruleId":"61","severity":1,"message":"66","line":32,"column":4,"nodeType":"63","endLine":32,"endColumn":17,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["68"],["69"],"'setSingleUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchingCommentById' and 'searchCommentById'. Either include them or remove the dependency array.","ArrayExpression",["70"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchingTodoById' and 'searchTodoById'. Either include them or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [fetchingCommentById, isSearching, searchCommentById]",{"range":"76","text":"77"},"Update the dependencies array to be: [fetchingTodoById, isSearching, searchTodoById]",{"range":"78","text":"79"},[738,751],"[fetchingCommentById, isSearching, searchCommentById]",[720,733],"[fetchingTodoById, isSearching, searchTodoById]"]